import matplotlib.pyplot as plt
import numpy as np

sparity = (0.6, 0.7, 0.8, 0.9, 0.95)

energy_consumed_total = {
    'CoLA':(0.22704597274339128,0.2204921854702842,0.23629040079270153,0.2129863361344764,0.21142746775183768,0.198506911764203),
    'MNLI':(4.485268636266704,4.229035430368626,4.21273313990217,4.589938777096128,4.111202692030416,4.6998467670311),
    'MRPC':(0.2081843638389436,0.16257861700192694,0.20126651079331723,0.20955709272593837,0.1939973992856481,0.18240938680798918),
    'QNLI':(1.2342997757092915,1.3062944719214737,1.0611113239476544,1.1398978029855444,1.2600564036920525,0),
    'QQP':(5.464573237743999,6.407601790473565,5.282198745211113,5.30713784104862,6.2834874069481055,5.405022978001607),
    'RTE':(0.1595745803741954,0.18862411347894129,0.19721111362691196,0.15826704435828437,0.18085095413399743,0.15714099934325035),  
    'SST2':(0.33523488240696114,0.3165178596581087,0.31638692015914577,0.3486620535839443,0.3117226374503665,0),
    'STSB':(0.30386563109897324,0.29741102704214417,0.32677878376761654,0.2850871148657031,0.26679986871786804,0.3028695733610772)
}
emission_inference = {
    'MNLI':(613.2763,247.1696,238.6993,142.6552,105.9484,86.3617),
    'QQP':(2513.1775,1294.3545,984.1864,672.0734,515.9815,489.6),
    'QNLI':(338.4177,173.7092,143.67,107.5581,75.0522,47.3255),
    'SST2':(54.1532,28.4318,22.9707,18.2162,12.8283,9.2956),
    'MRPC':(25.9012,13.6798,11.3028,8.6548,5.3752,4.0218),
    'RTE':(17.7073,9.7732,6.3144,5.21,4.0686,3.5331),  
    'STSB':(92.9982,50.4655,32.5371,32.1535,18.9664,12.7853)
}
emission_inference_no_distill = {
    'MNLI':(),
    'QQP':(),
    'QNLI':(141.8898,111.8463,86.3992,54.3136,35.2759),
    'SST2':(),
    'MRPC':(),
    'RTE':(),  
    'STSB':()
}

x = np.arange(len(sparity))  # the label locations
width = 0.1  # the width of the bars
multiplier = 0

fig, ax = plt.subplots(layout='constrained')
for attribute, measurement in emission_inference_no_distill.items():
    offset = width * multiplier
    rects = ax.bar(x + offset, measurement, width, label=attribute)
    multiplier += 1
# ax.set_ylim(bottom=0, top=0.03)

ax.set_ylabel('Energy (mili J)')
ax.set_title('Pruning : Energy consumption')
ax.set_xlabel('Sparsity Ratio')
ax.set_xticks(x + width, sparity)
ax.legend()
# plt.savefig('images/emissions_all.png', bbox_inches='tight')
plt.savefig('images/emissions_less.png', bbox_inches='tight')
plt.show()
